global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	#nbthread 48
	user haproxy
	group haproxy
	daemon
	#h1-accept-payload-with-any-method
	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	option abortonclose
	option http-no-delay
	option allbackups
	option redispatch
	http-reuse always
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


frontend tts-rvc-frontend-tg
		bind                    127.0.0.1:5150 name 127.0.0.1:5150
		mode                    http
		log                     global
		maxconn                 6
		timeout client          5000
		option http-no-delay
		default_backend tts-rvc-backend


frontend tts-rvc-frontend
		bind                    127.0.0.1:5050 name 127.0.0.1:5050
		mode                    http
		log                     global
		maxconn                 64
		timeout client          5000
		option http-no-delay
		default_backend tts-rvc-backend

backend tts-rvc-backend
		mode                    http
		log                     global
		timeout connect         5000
		timeout server          5000
		#fullconn                5
		balance leastconn
		option httpchk GET /health-check
		retries                 1
		retry-on all-retryable-errors
		option redispatch
		option abortonclose
		option http-no-delay

		server                  rvc1:0 127.0.0.1:5051 maxconn 4 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  rvc2:0 127.0.0.1:5052 maxconn 4 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  rvc3:0 127.0.0.1:5053 maxconn 4 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  rvc4:0 127.0.0.1:5054 maxconn 4 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  rvc5:0 127.0.0.1:5055 maxconn 4 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  rvc6:0 127.0.0.1:5056 maxconn 4 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  rvc7:0 127.0.0.1:5057 maxconn 4 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down


frontend tts-vits-frontend-tg
		bind                    127.0.0.1:5140 name 127.0.0.1:5140
		mode                    http
		log                     global
		maxconn                 10
		timeout client          5000
		option http-no-delay
		default_backend tts-vits-backend


frontend tts-vits-frontend
		bind                    127.0.0.1:5040 name 127.0.0.1:5040
		mode                    http
		log                     global
		maxconn                 64
		timeout client          5000
		option http-no-delay
		default_backend tts-vits-backend

backend tts-vits-backend
		mode                    http
		log                     global
		timeout connect         5000
		timeout server          5000
		#fullconn                5
		balance leastconn
		option httpchk GET /health-check
		retries                 1
		retry-on all-retryable-errors
		option redispatch 1
		option abortonclose
		option http-no-delay

		server                  vits1:0 127.0.0.1:5041 maxconn 8 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  vits2:0 127.0.0.1:5042 maxconn 8 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  vits3:0 127.0.0.1:5043 maxconn 8 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  vits4:0 127.0.0.1:5044 maxconn 8 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  vits5:0 127.0.0.1:5045 maxconn 8 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down



frontend tts-gpu-hubert-frontend
		bind                    127.0.0.1:5060 name 127.0.0.1:5060
		mode                    http
		log                     global
		maxconn                 64
		timeout client          5000
		option http-no-delay
		default_backend tts-gpu-hubert-backend

backend tts-gpu-hubert-backend
		mode                    http
		log                     global
		timeout connect         5000
		timeout server          5000
		#fullconn                5
		balance leastconn
		option httpchk GET /health-check
		retries                 1
		retry-on all-retryable-errors
		option abortonclose
		option http-no-delay

		server                  hubert1:0 127.0.0.1:5061 maxconn 8 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down
		server                  hubert2:0 127.0.0.1:5062 maxconn 8 check inter 1s fall 1 rise 3 observe layer7 error-limit 1 on-error mark-down


frontend tts-api-blips-frontend
		bind                    127.0.0.1:5070 name 127.0.0.1:5070
		mode                    http
		log                     global
		maxconn                 8
		timeout client          5000
		option http-no-delay
		default_backend tts-api-blips-backend

backend tts-api-blips-backend
		mode                    http
		log                     global
		timeout connect         5000
		timeout server          5000
		fullconn                1000
		balance first
		option httpchk GET /health-check
		retries                 1
		retry-on all-retryable-errors
		option redispatch
		option abortonclose
		option http-no-delay
		server                  blips0:0 127.0.0.1:5071 maxconn 16 check inter 1s fall 2 rise 2 observe layer7 error-limit 5 on-error sudden-death
		server                  blips0:b 127.0.0.1:5071 maxconn 16 no-check backup

frontend tts-api-frontend-tg
		bind                    127.0.0.1:5100 name 127.0.0.1:5100
		mode                    http
		log                     global
		maxconn                 128
		timeout client          10000
		option http-no-delay
		default_backend tts-api-backend-tg

backend tts-api-backend-tg
		mode                    http
		log                     global
		timeout connect         20000
		timeout server          20000
		fullconn                1000
		balance leastconn
		option httpchk GET /health-check
		retries                 1
		retry-on all-retryable-errors
		option redispatch
		option abortonclose
		option http-no-delay
		server                  tg1:0 127.0.0.1:5101 maxconn 128 check inter 1s fall 3 rise 1
		server                  tg2:0 127.0.0.1:5102 maxconn 128 check inter 1s fall 3 rise 1
		server                  tg1:b 127.0.0.1:5101 maxconn 128 no-check backup
		
	
listen stats
	bind                    127.0.0.1:8080 name 127.0.0.1:8080
	mode                    http
	maxconn                 1000
	timeout client          10000
	stats enable
	stats refresh 5s
	stats uri     /
	stats admin if LOCALHOST
	stats show-legends

listen stats-fast
	bind                    127.0.0.1:8081 name 127.0.0.1:8081
	mode                    http
	maxconn                 1000
	timeout client          10000
	stats enable
	stats refresh 2s
	stats uri     /
	stats admin if LOCALHOST
	stats show-legends
	
listen stats-faster
	bind                    127.0.0.1:8082 name 127.0.0.1:8082
	mode                    http
	maxconn                 1000
	timeout client          10000
	stats enable
	stats refresh 1s
	stats uri     /
	stats admin if LOCALHOST
	stats show-legends

listen stats-public
	bind                    0.0.0.0:8888 name 0.0.0.0:8888
	mode                    http
	maxconn                 25
	timeout client          10000
	stats enable
	stats refresh 5s
	stats uri     /
	stats scope tts-vits-frontend
	stats scope tts-vits-backend
	stats scope tts-rvc-frontend
	stats scope tts-rvc-backend
	stats scope tts-gpu-hubert-backend
	stats scope tts-gpu-hubert-frontend
	stats scope tts-api-blips-frontend
	stats scope tts-api-blips-backend
	stats hide-version
	stats show-desc /tg/Station 13 TTS
	
	
listen stats-public-tg
	bind                    0.0.0.0:5199 name 0.0.0.0:5199
	mode                    http
	maxconn                 25
	timeout client          10000
	stats enable
	stats refresh 5s
	stats uri     /tts/tg/haproxy-stats
	stats scope tts-api-frontend-tg
	stats scope tts-api-backend-tg
	stats scope tts-vits-frontend-tg
	stats scope tts-vits-backend
	stats scope tts-rvc-frontend-tg
	stats scope tts-rvc-backend
	stats scope tts-gpu-hubert-backend
	stats scope tts-gpu-hubert-frontend
	stats scope tts-api-blips-frontend
	stats scope tts-api-blips-backend
	stats hide-version
	stats show-desc /tg/Station 13 TTS
	












