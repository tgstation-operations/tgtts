server {
	server_name tts.tgstation13.org;
	
	root /var/www/html;
	
	location /tts/tg {
		proxy_pass http://localhost:5100/;
		access_log /var/log/nginx/stream.log upstream_time;
		access_log /var/log/nginx/access.log;
		#return 403;
	}
	location /tts/tg/haproxy-stats {
		proxy_pass http://localhost:5199/;
		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;
		#return 403;
	}
	location /tts/sky {
		proxy_pass http://localhost:5200/;
		access_log /var/log/nginx/stream.log upstream_time;
		access_log /var/log/nginx/access.log;
		#return 403;
	}
	location /tts/sky/haproxy-stats {
		proxy_pass http://localhost:5299/;
		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;
		#return 403;
	}
	location /tts/nova {
		proxy_pass http://localhost:5300/;
		access_log /var/log/nginx/stream.log upstream_time;
		access_log /var/log/nginx/access.log;
		#return 403;
	}
	location /tts/nova/haproxy-stats {
		proxy_pass http://localhost:5399/;
		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;
		#return 403;
	}
	location /tts/goof {
		proxy_pass http://localhost:5400/;
		access_log /var/log/nginx/stream.log upstream_time;
		access_log /var/log/nginx/access.log;
		#return 403;
	}
	location /tts/goof/haproxy-stats {
		proxy_pass http://localhost:5499/;
		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;
		#return 403;
	}
	location ^~ /.well-known/acme-challenge/ {
		alias /var/www/html/.well-known/acme-challenge;
		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;
	}
	
	location /cache/ {
		alias /mnt/2tb/tts_gen_cache/;
		add_header Cache-Control "public,max-age=2592000,immutable,stale-if-error=2592000,stale-while-revalidate=2592000";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-None-Match,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Access-Control-Max-Age,ETag,Expires,Last-Modified,Cache-Control,Content-Type,Content-Length,Content-Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			add_header Cache-Control "public,max-age=2592000,immutable,stale-if-error=2592000,stale-while-revalidate=2592000";
			return 204;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'If-None-Match,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'ETag,Expires,Last-Modified,Cache-Control,Content-Type,Content-Length,Content-Range';
			add_header Cache-Control "public,max-age=2592000,immutable,stale-if-error=2592000,stale-while-revalidate=2592000";

		}
		access_log /var/log/nginx/stream.log upstream_time;
		access_log /var/log/nginx/access.log;
		gzip_static on;
		gunzip on;
	}
	
    listen 443 ssl; # managed by Certbot
	#listen 8080;
    ssl_certificate /etc/letsencrypt/live/tts.tgstation13.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tts.tgstation13.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	location / {
		return 403;
		access_log off;
		error_log /var/log/nginx/error.log emerg;
	}
}

server {
    if ($host = tts.tgstation13.org) {
        return 302 https://$host$request_uri;
    } # managed by Certbot
	
	
	location /cache/ {
		alias /mnt/2tb/tts_gen_cache/;
		add_header Cache-Control "public,max-age=2592000,immutable,stale-if-error=2592000,stale-while-revalidate=2592000";
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-None-Match,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Access-Control-Max-Age,ETag,Expires,Last-Modified,Cache-Control,Content-Type,Content-Length,Content-Range';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			add_header Cache-Control "public,max-age=2592000,immutable,stale-if-error=2592000,stale-while-revalidate=2592000";
			return 204;
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'If-None-Match,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'ETag,Expires,Last-Modified,Cache-Control,Content-Type,Content-Length,Content-Range';
			add_header Cache-Control "public,max-age=2592000,immutable,stale-if-error=2592000,stale-while-revalidate=2592000";

		}
		access_log /var/log/nginx/stream.log upstream_time;
		access_log /var/log/nginx/access.log;
		gzip_static on;
		gunzip on;
	}
	location / {
		return 404; # managed by Certbot
	}
	server_name tts.tgstation13.org;
	listen 80;
    
	access_log off;
	error_log /var/log/nginx/error.log emerg;

}